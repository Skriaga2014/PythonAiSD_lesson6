'''
5. В массиве найти максимальный отрицательный элемент.
Вывести на экран его значение и позицию в массиве.
'''

#from sys import getsizeof as memor
from random import randint as rnd
#mems = 0

VARIANTS = [-100, 100]
#mems += memor(VARIANTS)
#mems += memor(-100)
#mems += memor(100)

ITEMS = [5, 15]
#mems += memor(ITEMS)
#mems += memor(5)
#mems += memor(15)

answer = 0

list_ = [rnd(*VARIANTS) for _ in range(rnd(*ITEMS))]
for i in list_:
    if i < 0 and answer == 0:
        answer = i
    elif i < 0 and i > answer:
        answer = i

#mems += memor(answer)
#mems += memor(list_)
#for i in list_:
#    mems += memor(i)

if answer == 0:
    print(f'В списке {list_} \nнет отрицательных элементов')
else:
    print(f'В списке {list_} \nмаксимальный отрицательный элемент: {answer}')

#print(mems)

# Объем памяти, выделяемый для всех переменных = от 564 до 912 байт (зависит от того,
# сколько элементов в списке (количество элементов списка рандомится) - каждый элемент занимает 28 байта
# (кроме элементов со значением 0 (24 байта) и первого элемента)

# Пользуясь случаем, хотелось бы задать вопрос к вэбинару, на который я не смог найти ответ:
# Почему список, созданный рандомом, весит на 24 байта больше списка, созданного самостоятельно?
# Это при том, что пустые списки, созданые обоими способами, занимают одно и то же место - 64 байта,
# но если в этих списках есть хотя бы один элемент, то выделенная память отличается на 24 байта.
# Всё упирается в то, что данные о первом месте в списке могут занимать как 8 байт, так и 32
# (хотя значение может быть одним). Но почему?


